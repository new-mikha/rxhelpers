buildscript {
    // Any environment or dev-specific change - put it into the environment.gradle file, marking it 
    // 	as assume-unchanged by running "git update-index --assume-unchanged environment.gradle"
    apply from: "environment.gradle"
}

plugins {
    id 'java'
    id 'java-library'
    id 'maven'
    id 'signing'
}

def projectFileName = "${project.name}"

version = '1.0.0'
project.version = version
group = 'io.github.new-mikha'
archivesBaseName = projectFileName
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

defaultTasks 'clean', 'build'

repositories {
    // If you need to use an organisation-specific repo, put it into the environment.gradle file
    jcenter()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('javadoc')
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

dependencies {
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    implementation 'com.google.guava:guava:26.0-jre'
    implementation group: 'io.reactivex.rxjava2', name: 'rxjava', version: '2.1.17'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:2.1.0"
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: project.findProperty("nexusUsername"), password: project.findProperty("nexusPassword"))
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: project.findProperty("nexusUsername"), password: project.findProperty("nexusPassword"))
            }

            pom.project {
                name 'rxhelpers'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'Add-ons for RxJava2, currently contains ReplayRemoveSubject that allows to remove replayable items from the buffer'
                url 'https://github.com/new-mikha/rxhelpers'

                scm {
                    connection 'scm:git:https://github.com/new-mikha/rxhelpers'
                    developerConnection 'scm:git:https://github.com/new-mikha/rxhelpers'
                    url 'https://github.com/new-mikha/rxhelpers'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'new-mikha'
                        name 'Michael Karmazin'
                        email 'm.karmazin@gmail.com'
                    }
                }
            }
        }
    }
}
